package view;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import service.APIService;

import model.Product;

import com.example.bukalapaklogin.R;
import com.example.bukalapaklogin.R.layout;
import com.example.bukalapaklogin.R.menu;

import controller.APIController;
import controller.APIListener;

import android.os.AsyncTask;
import android.os.Bundle;
import android.os.IBinder;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.view.Menu;
import android.widget.ListView;
import android.widget.Toast;

public class LapakActivity extends Activity {

	private List<Product>  mListProduct;
	private ProductItemAdapter adapter;
private APIService api;
    
    private ServiceConnection  mConnection;
	

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_lapak);
		ListView productList = (ListView) findViewById(R.id.listProduct);
		//buat list produk
		mListProduct = new ArrayList<Product>();
		//buat adapter
		adapter = new ProductItemAdapter(this,mListProduct);
		//set adapter
		productList.setAdapter(adapter);
		
		mConnection = new ServiceConnection() {
			@Override
			public void onServiceConnected(ComponentName arg0, IBinder arg1) {
				api = ((APIService.MyBinder) arg1).getService();
		        Toast.makeText(getApplicationContext(), "Connected to API Service", Toast.LENGTH_SHORT).show();
		        
		        try {
					api.retrieveNewAccess("rizkivmaster", "18091992gnome", new APIListener() {
						
						@SuppressWarnings("unchecked")
						@Override
						public void onSuccess(Object res, Exception e) {
							api.setSoldProduct(new APIListener() {
								
								@Override
								public void onSuccess(Object res, Exception e) {
									// TODO Auto-generated method stub
									res.toString();
								}
								
								@Override
								public void onHold() {
									// TODO Auto-generated method stub
									
								}
								
								@Override
								public void onExecute() {
									// TODO Auto-generated method stub
									
								}
								
								@Override
								public void onEnqueue() {
									// TODO Auto-generated method stub
									
								}
							}, "mli5");
						}
						
						@Override
						public void onHold() {
							// TODO Auto-generated method stub
							
						}
						
						@Override
						public void onExecute() {
							// TODO Auto-generated method stub
							
						}
						
						@Override
						public void onEnqueue() {
							// TODO Auto-generated method stub
							
						}
					});
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}

			@Override
			public void onServiceDisconnected(ComponentName arg0) {
				Toast.makeText(getApplicationContext(), "Disconnected from API Service", Toast.LENGTH_SHORT).show();
			}

	      };
		
		Intent intent = new Intent(this, APIService.class);
        bindService(intent, mConnection, Context.BIND_AUTO_CREATE);

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_lapak, menu);
		return true;
	}
	
	//ASYNC TASK TO AVOID CHOKING UP UI THREAD DOWNLOAD STRING
		private class BrowseTask extends AsyncTask<String, String, List<Product>> {
		
		    @Override
		    protected void onPreExecute() {}
		
		    protected List<Product> doInBackground(String... param) {
		    	APIController api;
				try {
					api = new APIController(getApplicationContext(),"rizkivmaster","18091992gnome");
					return api.listLapak(false, false);
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
		    	return null;
		    }
		
		    protected void onPostExecute(List<Product> ret) {
		        if (ret != null) {
					for (Product product : ret) {
						mListProduct.add(product);	
					}
				}
		        if (adapter != null) {
		                adapter.notifyDataSetChanged();
		        }
		    }
		}
//		private class ImageDownloader extends AsyncTask<Product,String,Bitmap> {
//			Product product;
//	        protected Bitmap doInBackground(Product... prd) {
//	            // TODO Auto-generated method stub
//	        	product = prd[0];
//	        	Bitmap bitmap =  Global.downloadBitmap(product.getAttributes().get("image"));
//	            return bitmap;
//	        }
//	        @Override
//	        protected void onPreExecute() {
//	            Log.i("Async-Example", "onPreExecute Called");
//
//	        }
//	        protected void onPostExecute(Bitmap result) {
//	    			product.setImage(result);
//	    			if(adapter!=null)
//	                adapter.notifyDataSetChanged();	
//	        }
	
	

}
